apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "transcode-web-cache-chart.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "transcode-web-cache-chart.name" . }}
    helm.sh/chart: {{ include "transcode-web-cache-chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "transcode-web-cache-chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.update.maxUnavailable }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "transcode-web-cache-chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: AWS_ACCESS_KEY_ID
              value: "{{ .Values.aws.accessKeyId }}"
            - name: AWS_SECRET_ACCESS_KEY
              value: "{{ .Values.aws.secretAccessKey }}"
            - name: AWS_BUCKET
              value: "{{ .Values.aws.bucket }}"
            - name: AWS_ENDPOINT
              value: "{{ .Values.aws.endpoint }}"
            - name: AWS_REGION
              value: "{{ .Values.aws.region }}"
            - name: AWS_NO_SSL
              value: "{{ .Values.aws.noSSL }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: httpprobe
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /liveness
              port: httpprobe
          readinessProbe:
            httpGet:
              path: /readiness
              port: httpprobe
          volumeMounts:
          - name: cache
            mountPath: /cache
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: cache
      {{- if .Values.persistence.enabled }}
        hostPath:
          path: "{{ .Values.persistence.hostPath }}"
          type: "{{ .Values.persistence.type }}"
      {{- else }}
        emptyDir: {}
      {{- end -}}